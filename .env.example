# DATABASE_URL=file:./dev.db
# TEST_DATABASE_URL=file:./.redwood/test.db
# PRISMA_HIDE_UPDATE_MESSAGE=true
# LOG_LEVEL=trace

# Using Postgres as a DB of choice. Ready-to-use local setup using Docker compose (see docker-compose.yml)
DATABASE_URL=postgresql://postgres:root@localhost:5432/rw_slack_app?schema=public
TEST_DATABASE_URL=postgresql://postgres:root@localhost:5432/test_rw_slack_app?schema=public

# Used as a Base URL for the Slack redirect endpoint provided to Slack as `redirect_uri`
# Use your "real" domain in prod env variables
API_URL=https://dynamic-domain.ngrok.io/.redwood/functions

# Your Slack app's credentials
SLACK_CLIENT_ID=456791354945.7891306450889
SLACK_CLIENT_SECRET=684ef6454324d654c6a654b5ad44

# Generate with `yarn rw g secret`
SLACK_STATE_SECRET=my-state-secret

#
SLACK_OAUTH_SCOPES=users:read,users:read.email,users.profile:read

# Encryption configuration â€“ Slack token are stored encrypted in the DB for added security
# Generate the key password with `yarn rw g secret`
# Be careful when changing other values: IV & key size depend on the chosen algorithm
CRYPTO_ALG=aes-256-cbc
CRYPTO_SALT_LEN=16
CRYPTO_IV_LEN=16
CRYPTO_KEY_PASSWORD=my-AES-key-password
CRYPTO_KEY_ITERATIONS=100000
CRYPTO_KEY_LEN=32
CRYPTO_KEY_DIGEST_ALG=sha512
